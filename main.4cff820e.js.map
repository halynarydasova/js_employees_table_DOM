{"version":3,"sources":["scripts/main.js"],"names":["editedCell","activeLine","table","document","querySelector","captions","employees","form","createElement","submitBtn","inputNames","currOrder","currColumnName","sortTable","a","b","columnName","first","second","localeCompare","render","board","content","innerHTML","forEach","employee","Object","row","entries","key","data","column","textContent","salary","toLocaleString","append","validateData","text","trim","length","applyChanges","e","target","classList","contains","newText","value","cell","parentNode","shouldBeReplaced","getAttribute","lastElementChild","Array","from","children","el","push","Name","Position","Office","Age","Salary","replace","addEventListener","sortValue","sort","reverse","remove","add","field","inputType","insertAdjacentHTML","toLowerCase","selectOptions","options","map","item","preventDefault","notification","notificationTitle","notificationBody","setAttribute","className","formData","FormData","fromEntries","reset","body","setTimeout","removeChild","editedCellType","isNaN","parseInt","search","firstChild","focus"],"mappings":"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","file":"main.4cff820e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('tbody');\nconst captions = document.querySelector('thead');\nconst employees = [];\nconst form = document.createElement('form');\nconst submitBtn = document.createElement('button');\nconst inputNames = ['Name', 'Position', 'Office', 'Age', 'Salary'];\nlet editedCell;\nlet currOrder = 'asc';\nlet currColumnName = '';\nlet activeLine;\n\nArray.from(table.children).forEach(el => {\n  employees.push({\n    Name: el.children[0].textContent,\n    Position: el.children[1].textContent,\n    Office: el.children[2].textContent,\n    Age: el.children[3].textContent,\n    Salary: +el.children[4].textContent.replace(/[,$]/g, ''),\n  });\n});\n\ncaptions.addEventListener('click', (e) => {\n  const sortValue = e.target.textContent;\n\n  employees.sort((a, b) => sortTable(a, b, sortValue));\n\n  if (currColumnName === sortValue && currOrder === 'desc') {\n    currOrder = 'asc';\n  } else if (currColumnName === sortValue && currOrder === 'asc') {\n    currOrder = 'desc';\n    employees.reverse();\n  }\n\n  if (currColumnName !== sortValue) {\n    currColumnName = sortValue;\n    currOrder = 'asc';\n  }\n\n  render(table, employees);\n});\n\ntable.addEventListener('click', (e) => {\n  if (activeLine && activeLine !== e.target.parentNode) {\n    activeLine.classList.remove('active');\n  }\n\n  activeLine = e.target.parentNode;\n  activeLine.classList.add('active');\n});\n\nform.classList.add('new-employee-form');\n\ninputNames.forEach(field => {\n  if (field !== 'Office') {\n    const inputType = (field === 'Age' || field === 'Salary')\n      ? 'number'\n      : 'text';\n\n    form.insertAdjacentHTML('beforeend',\n      `<label>${field}: <input name=\"${field.toLowerCase()}\"\n        type=\"${inputType}\" data-qa=\"${field.toLowerCase()}\"\n        ></label>`);\n  } else {\n    const selectOptions = ['Tokyo', 'Singapore', 'London',\n      'New York', 'Edinburgh', 'San Francisco'];\n    const options = selectOptions.map(item => (\n      `<option name=${item}>${item}</option>`));\n\n    form.insertAdjacentHTML('beforeend',\n      `<label>${field}: <select name=\"${field.toLowerCase()}\" type=\"text\"\n        data-qa=\"${field.toLowerCase()}\" required\n        >\n        ${options}\n        </select></label>`);\n  }\n});\nsubmitBtn.textContent = 'Save to table';\nform.append(submitBtn);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationBody = document.createElement('p');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = 'notification';\n  notification.append(notificationTitle);\n  notification.append(notificationBody);\n\n  const formData = new FormData(e.target);\n  const data = Object.fromEntries(formData.entries());\n  const isError = validateData(data, notificationBody);\n\n  if (!isError) {\n    employees.push({\n      Name: data['name'],\n      Position: data['position'],\n      Office: data['office'],\n      Age: +data['age'],\n      Salary: +data['salary'],\n    });\n\n    notification.classList.add('success');\n    notificationTitle.textContent = 'Success';\n    notificationBody.textContent = 'Data successfully added';\n\n    render(table, employees);\n    e.target.reset();\n  } else {\n    notificationTitle.textContent = 'Error';\n    notification.classList.add('error');\n  }\n  document.body.append(notification);\n\n  setTimeout(() => {\n    document.body.removeChild(notification);\n  }, 3000);\n});\n\ndocument.body.append(form);\n\ntable.addEventListener('dblclick', (e) => {\n  editedCell = e.target.textContent;\n\n  const editedCellType = (!isNaN(parseInt(editedCell))\n    || editedCell.search(/[$]/) !== -1)\n    ? 'number'\n    : 'text';\n\n  e.target.innerHTML = `<input class=\"cell-input\"\n    value=\"${(editedCell.search(/[$]/) === -1)\n    ? editedCell\n    : editedCell.replace(/[,$]/g, '')}\"\n    type=${editedCellType}>`;\n  e.target.firstChild.focus();\n});\n\ndocument.addEventListener('blur', (e) => {\n  applyChanges(e);\n}, true);\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'Enter') {\n    applyChanges(e);\n  }\n});\n\nfunction sortTable(a, b, columnName) {\n  const first = a[columnName];\n  const second = b[columnName];\n\n  if (columnName === 'Name'\n    || columnName === 'Position'\n    || columnName === 'Office') {\n    return first.localeCompare(second);\n  }\n\n  return first - second;\n}\n\nfunction render(board, content) {\n  board.innerHTML = '';\n\n  content.forEach(employee => {\n    const row = document.createElement('tr');\n\n    for (const [ key, data ] of Object.entries(employee)) {\n      const column = document.createElement('td');\n\n      column.textContent = data;\n\n      if (key === 'Salary') {\n        const salary = `$${data.toLocaleString()}`;\n\n        column.textContent = salary;\n      }\n\n      row.append(column);\n    };\n    board.append(row);\n  });\n}\n\nfunction validateData(data, text) {\n  if (data['name'].trim().length < 4) {\n    text.textContent = 'Name should contain more than 4 letters. ';\n\n    return true;\n  }\n\n  if (data['position'].trim() === '') {\n    text.textContent = 'Position is required';\n\n    return true;\n  }\n\n  if (data['age'] < 18 || data['age'] > 90) {\n    text.textContent = 'Age must be between 18 and 90.';\n\n    return true;\n  }\n\n  if (+data['salary'] <= 0 || data['salary'].trim() === '') {\n    text.textContent = 'Salary is required';\n\n    return true;\n  }\n}\n\nfunction applyChanges(e) {\n  if (e.target.classList.contains('cell-input')) {\n    const newText = e.target.value.trim();\n    const cell = e.target.parentNode;\n    let shouldBeReplaced = true;\n    const columnName = (e.target.getAttribute('type') === 'number'\n      && cell.parentNode.lastElementChild === cell)\n      ? 'salary' : 'age';\n\n    if (columnName === 'age' && (+newText < 18 || +newText > 90)) {\n      shouldBeReplaced = false;\n    }\n\n    if (newText === '' || +newText <= 0) {\n      shouldBeReplaced = false;\n    }\n\n    if (shouldBeReplaced && columnName === 'salary') {\n      cell.textContent = '$' + (+newText).toLocaleString();\n\n      return;\n    }\n\n    if (!shouldBeReplaced) {\n      cell.textContent = editedCell;\n\n      return;\n    }\n\n    cell.textContent = newText;\n  }\n}\n"]}